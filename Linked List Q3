/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
              ListNode *curr=head, *prev=nullptr, *next=nullptr, *original=head;

     while (curr != nullptr) {
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        head = prev;
        ListNode *temp=head;

        int count=0;
        while(temp!=nullptr){ 
             count++;
             temp=temp->next;
        }
            for(int i=0;i<count/2;i++){
             if(head!=nullptr && original!=nullptr){
                   if(!(head->val==original->val)) return false; 
                head=head->next;
                original=original->next; 
            }
            }
        return true;
    }
};
